name: Build postfix image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths-ignore:
      - README.md
      - docker-compose.yml
      - .github/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - README.md
      - docker-compose.yml
      - .github/**
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER_POSTFIX }}
          password: ${{ secrets.QUAY_TOKEN_POSTFIX }}

      - name: Get Latest Postfix Version
        run: |
          sudo apt update
          # Fetch the candidate version of Postfix
          APT_POSTFIX_VERSION=$(apt-cache policy postfix | grep Candidate | awk '{print $2}')
          # Extract the version for Docker tagging (remove Ubuntu-specific suffixes and keep major.minor.patch)
          DOCKER_POSTFIX_VERSION=$(echo "$APT_POSTFIX_VERSION" | grep -oE '^\d+\.\d+\.\d+')
          echo "APT_POSTFIX_VERSION=$APT_POSTFIX_VERSION" >> $GITHUB_ENV
          echo "DOCKER_POSTFIX_VERSION=$DOCKER_POSTFIX_VERSION" >> $GITHUB_ENV
        
      - name: Prepare Tags
        run: |
          if [[ -z "$DOCKER_POSTFIX_VERSION" ]]; then
            echo "DOCKER_TAG=quay.io/elnissi-io/postfix:latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=quay.io/elnissi-io/postfix:$DOCKER_POSTFIX_VERSION" >> $GITHUB_ENV
          fi
        shell: /usr/bin/bash -e {0}
        
      
      - name: Build (and optionally push) image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: |
            ${{ env.DOCKER_TAG }}
          build-args: |
            POSTFIX_VERSION=${{ env.APT_POSTFIX_VERSION }}
      
